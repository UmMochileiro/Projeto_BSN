events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  
  # Adicionar tipo MIME para JavaScript modules
  location ~* \.js$ {
    add_header Content-Type application/javascript;
  }
  
  # Log format para debugging
  log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$request_filename" "$document_root"';

  server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # Log access para debugging detalhado
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log debug;

    # Configuração específica para arquivos JavaScript
    location ~* \.js$ {
      try_files $uri =404;
      expires 1y;
      add_header Cache-Control "public, immutable";
      add_header Content-Type "application/javascript; charset=utf-8";
      
      # Debug headers
      add_header X-Debug-File-Path "$request_filename" always;
      add_header X-Debug-Document-Root "$document_root" always;
    }
    
    # Configuração específica para arquivos CSS
    location ~* \.css$ {
      try_files $uri =404;
      expires 1y;
      add_header Cache-Control "public, immutable";
      add_header Content-Type "text/css; charset=utf-8";
    }

    # Configuração para arquivos HTML (incluindo index.html)
    location ~* \.html$ {
      try_files $uri =404;
      expires -1;
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header Pragma "no-cache";
    }

    # Configuração para SPA - deve vir por último
    location / {
      try_files $uri $uri/ /index.html;
    }

    # Cache para imagens e outros assets
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
      try_files $uri =404;
      expires 1y;
      add_header Cache-Control "public, immutable";
    }

    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  }
}
